CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name  VARCHAR(128),
    email VARCHAR(128),
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT uq_user_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(128),
    CONSTRAINT pk_categories PRIMARY KEY (id),
    CONSTRAINT uq_categories_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS events
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title              VARCHAR(128),
    annotation         VARCHAR(1024),
    category_id        BIGINT,
    paid               BOOLEAN,
    event_date         TIMESTAMP WITHOUT TIME ZONE,
    initiator_id       BIGINT,
    description        VARCHAR(4096),
    participant_limit  SMALLINT,
    state              VARCHAR(32),
    created_on         TIMESTAMP WITHOUT TIME ZONE,
    published_on       TIMESTAMP WITHOUT TIME ZONE,
    lat                NUMERIC,
    lon                NUMERIC,
    request_moderation BOOLEAN,
    confirmed_requests SMALLINT,
    views              INTEGER,
    CONSTRAINT pk_event PRIMARY KEY (id),
    CONSTRAINT fk_event_category FOREIGN KEY (category_id) REFERENCES categories (id),
    CONSTRAINT fk_event_initiator FOREIGN KEY (initiator_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS requests
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    event_id     BIGINT,
    requester_id BIGINT,
    created      TIMESTAMP WITHOUT TIME ZONE,
    status       VARCHAR(32),
    CONSTRAINT pk_request PRIMARY KEY (id),
    CONSTRAINT fk_request_event FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT fk_request_requester FOREIGN KEY (requester_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS compilations
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    title  VARCHAR(128),
    pinned BOOLEAN,
    CONSTRAINT pk_compilation PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilations_events
(
    compilation_id BIGINT,
    event_id       BIGINT,
    CONSTRAINT pk_events_compilations PRIMARY KEY (compilation_id, event_id),
    CONSTRAINT fk_compilations_events_compilation FOREIGN KEY (compilation_id) REFERENCES compilations (id) ON UPDATE CASCADE,
    CONSTRAINT fk_compilations_events_event FOREIGN KEY (event_id) REFERENCES events (id) ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS comments
(
    id       BIGINT,
    text     BIGINT,
    user_id  BIGINT,
    event_id BIGINT,
    CONSTRAINT pk_comments PRIMARY KEY (id),
    CONSTRAINT fk_comments_event FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT fk_comments_user FOREIGN KEY (user_id) REFERENCES users (id)
);